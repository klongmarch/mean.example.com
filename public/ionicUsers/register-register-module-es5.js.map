{"version":3,"sources":["webpack:///src/app/register/register.page.html","webpack:///src/app/register/register-routing.module.ts","webpack:///src/app/register/register.module.ts","webpack:///src/app/register/register.page.scss","webpack:///src/app/register/register.page.ts"],"names":["routes","path","component","RegisterPageRoutingModule","imports","forChild","exports","RegisterPageModule","declarations","RegisterPage","authService","router","user","errors","response","success","name","username","password","email","message","navigate","register","subscribe","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,yBAAyB;AAAA;AAAA,O;;AAAzBA,+BAAyB,6DAJrC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIqC,GAAzBH,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,kBAAkB;AAAA;AAAA,O;;AAAlBA,wBAAkB,6DAT9B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,kFAJO,CADD;AAORI,oBAAY,EAAE,CAAC,2DAAD;AAPN,OAAT,CAS8B,GAAlBD,kBAAkB,CAAlB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCYFE,YAAY;AAKvB,8BACUC,WADV,EAEUC,MAFV,EAEwB;AAAA;;AADd,eAAAD,WAAA,GAAAA,WAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AALV,eAAAC,IAAA,GAAY,IAAI,gDAAJ,EAAZ;AACA,eAAAC,MAAA,GAAc,EAAd;AAKK;;AARkB;AAAA;AAAA,qCAUZ,CAAE;AAVU;AAAA;AAAA,mCAYdC,SAZc,EAYN;AAEf,gBAAGA,SAAQ,CAACC,OAAT,KAAmB,KAAtB,EAA4B;AAE1B,kBAAID,SAAQ,CAACD,MAAT,CAAgBG,IAAhB,IAAwB,sBAA5B,EAAoD;AAClD,qBAAKH,MAAL,CAAYI,QAAZ,GAAuB,yBAAvB;AACD;;AAED,kBAAIH,SAAQ,CAACD,MAAT,CAAgBG,IAAhB,IAAwB,iBAA5B,EAA+C;AAC7C,qBAAKH,MAAL,CAAYI,QAAZ,GAAuB,sDAAvB;AACD;;AAED,kBAAIH,SAAQ,CAACD,MAAT,CAAgBG,IAAhB,IAAwB,sBAA5B,EAAoD;AAClD,qBAAKH,MAAL,CAAYK,QAAZ,GAAuB,yBAAvB;AACD;;AAED,kBAAIJ,SAAQ,CAACD,MAAT,CAAgBM,KAApB,EAA2B;AACzB,qBAAKN,MAAL,CAAYM,KAAZ,GAAoBL,SAAQ,CAACD,MAAT,CAAgBA,MAAhB,CAAuBM,KAAvB,CAA6BC,OAAjD;AACD;AAEF;;AAED,gBAAGN,SAAQ,CAACC,OAAT,KAAmB,IAAtB,EAA2B;AACzB,mBAAKJ,MAAL,CAAYU,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;AACF;AArCsB;AAAA;AAAA,qCAuCf;AAAA;;AACN,iBAAKX,WAAL,CAAiBY,QAAjB,CAA0B,KAAKV,IAA/B,EAAqCW,SAArC,CACE,UAACT,QAAD,EAAkB;AAChB,mBAAI,CAACA,QAAL,CAAcA,QAAd;AACD,aAHH;AAKD;AA7CsB;;AAAA;AAAA,S;;;;gBAThB;;gBAFA;;;;AAWIL,kBAAY,6DALxB,gEAAU;AACTe,gBAAQ,EAAE,cADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,kGAFS;;;;AAAA,OAAV,CAKwB,GAAZhB,YAAY,CAAZ","file":"register-register-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>register</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\">Email</ion-label>\\n    <ion-input [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\" type=\\\"email\\\"></ion-input>\\n    <div *ngIf=\\\"errors.email\\\"> {{ errors.email }} </div>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\">Username</ion-label>\\n    <ion-input [(ngModel)]=\\\"user.username\\\" name=\\\"username\\\" type=\\\"text\\\"></ion-input>\\n    <div *ngIf=\\\"errors.username\\\"> {{ errors.username }} </div>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\">First Name</ion-label>\\n    <ion-input [(ngModel)]=\\\"user.first_name\\\" name=\\\"first_name\\\" type=\\\"text\\\"></ion-input>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\">Last Name</ion-label>\\n    <ion-input [(ngModel)]=\\\"user.last_name\\\" name=\\\"last_name\\\" type=\\\"text\\\"></ion-input>\\n  </ion-item>\\n\\n  <ion-item>\\n    <ion-label position=\\\"floating\\\">Password</ion-label>\\n    <ion-input [(ngModel)]=\\\"user.password\\\" name=\\\"username\\\" type=\\\"text\\\"></ion-input>\\n    <div *ngIf=\\\"errors.password\\\"> {{ errors.password }} </div>\\n  </ion-item>\\n\\n  <ion-button color=\\\"primary\\\" expand=\\\"full\\\" (click)=\\\"onSubmit()\\\">Submit</ion-button>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../auth.service';\nimport { User } from '../user.model';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n  user:User = new User();\n  errors: any = {};\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {}\n\n  response(response): void{\n    \n    if(response.success===false){\n      \n      if( response.errors.name == 'MissingUsernameError' ){\n        this.errors.username = 'Please enter a username';\n      }\n\n      if( response.errors.name == 'UserExistsError' ){\n        this.errors.username = 'A user with the given username is already registered';\n      }\n\n      if( response.errors.name == 'MissingPasswordError' ){\n        this.errors.password = 'Please enter a password';\n      }\n\n      if( response.errors.email ){\n        this.errors.email = response.errors.errors.email.message;\n      }\n\n    }\n\n    if(response.success===true){\n      this.router.navigate(['/login']);\n    }\n  }\n\n  onSubmit(): void{\n    this.authService.register(this.user).subscribe(\n      (response:any) => {\n        this.response(response);\n      }\n    );\n  }\n\n}\n"]}