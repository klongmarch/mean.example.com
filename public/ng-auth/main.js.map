{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/logout/logout.component.ts","./src/app/logout/logout.component.html","./src/app/models/user.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full'},\n  { path: 'login', component: LoginComponent },\n  { path: 'logout', component: LogoutComponent },\n  { path: 'register', component: RegisterComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ng-auth';\n}\n","<router-outlet></router-outlet>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n// 1. Import FormsModule \nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { LogoutComponent } from './logout/logout.component';\nimport { RegisterComponent } from './register/register.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    LogoutComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    // 2. Add FormsModule to the imports list\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { UserService } from '../services/user.service';\n\n// 1. Import the User object (model)\nimport { User } from '../models/user';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  // 2. Create a new instance of the User object\n  user:User = new User();\n  // 3. Instantiate an errors array\n  error: any;\n\n  // 4. Clear out the contructor login\n  constructor(private userService: UserService) {}\n\n  ngOnInit() {}\n\n  // 5. Add a login method\n  login(): void{\n\n    this.userService.login(this.user).subscribe(\n      (response:any)=>{\n        console.log(response);\n\n        if(response.success == false){\n          this.error=true;\n        }\n\n      }\n    );\n  }\n\n}\n","<form (ngSubmit)=\"login()\">\n\n  <div *ngIf=\"error\" class=\"alert-error\">Invalid Credentials</div>\n\n  <label>Username</label>\n  <input [(ngModel)]=\"user.username\" name=\"username\">\n\n  <label>Password</label>\n  <input [(ngModel)]=\"user.password\" name=\"password\">\n\n  <input type=\"submit\">\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.scss']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private userService: UserService) {}\n\n  ngOnInit(): void {\n  }\n\n  // 5. Add a logout method\n  logout(): void{\n\nconsole.log(\"clicked logout\");\n\n    this.userService.logout().subscribe(\n      (response:any)=>{\n        console.log(response);\n\n      }\n    );\n  }\n\n}\n\n","<button (click) = \"logout()\">Logout</button>\n","export class User{\n  email:string;\n  username:string;\n  first_name:string;\n  last_name:string;\n  password:string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service';\n\n// 1. Import the User object (model)\nimport { User } from '../models/user';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  // 2. Create a new instance of the User object\n  user:User = new User();\n  // 3. Instantiate an errors array\n  error: any;\n\n  // 4. Clear out the contructor login\n  constructor(private userService: UserService) {}\n\n  ngOnInit() {}\n\n  // 5. Add a register method\n  register(): void{\n    this.userService.register(this.user).subscribe(\n      (response:any)=>{\n        console.log(response);\n\n        if(response.success == false){\n          this.error=true;\n        }\n      }\n    );\n  }\n}\n\n\n","<form (ngSubmit)=\"register()\">\n\n  <div *ngIf=\"error\" class=\"alert-error\">User info has error.</div>\n\n  <label>First Name</label>\n  <input [(ngModel)]=\"user.first_name\" name=\"first_name\">\n\n  <label>Last Name</label>\n  <input [(ngModel)]=\"user.last_name\" name=\"last_name\">\n\n  <label>Username</label>\n  <input [(ngModel)]=\"user.username\" name=\"username\">\n\n  <label>Email</label>\n  <input [(ngModel)]=\"user.email\" name=\"email\">\n\n  <label>Password</label>\n  <input [(ngModel)]=\"user.password\" name=\"password\">\n\n  <label>Confirm Password</label>\n  <input>\n\n  <input type=\"submit\">\n</form>\n","import { Injectable } from '@angular/core';\n// 1. Import HttpHeaders\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\n// 2. Import the User object (model)\nimport { User } from '../models/user';\n\n// 3. Create a JSON header to be attached to outbound post requests\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserService {\n  // 4. Set the domain portion of the url\n  private url:string = 'http://localhost:3000/api/auth';\n  // private url:string = 'http://loc.mean.example.com/api/auth';\n\n  constructor(\n    private http:HttpClient\n  ) { }\n\n  // 5. Replace the test method with a working implementation of login.\n  login(user: User): Observable<User> {\n    return this.http.post<User>(`${this.url}/login`, user, httpOptions);\n  }\n\n  logout() {\n    return this.http.delete(`${this.url}/logout`);\n  }\n\n  register(user: User): Observable<User> {\n    return this.http.post<User>(`${this.url}/register`, user, httpOptions);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}